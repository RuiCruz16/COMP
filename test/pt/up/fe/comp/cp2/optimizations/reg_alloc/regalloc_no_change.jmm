//import AA;

class RegAlloc {
    int field1;
    //int field2;
    public int soManyRegisters(int arg){
       //AA aa;
       //aa.ola(a);
       //AA.ola();
       //this.foo(b);
       //boolean c;
       int a;
       int b;
       int c;
       a = 0;

       if ( 2 < 6) {
        b = 0;
       } else {
        b = 1;
       }


       c = 0;

       a = field1;
       b = a + 2;

       c = 1;
       //field2 = field1 + 44;
       //c = !true;
       return a + b + c;
    }

    /*
    public int foo(int integerr) {
        return 0;
    }
    */
    /*
	public static void main(String[] args) {
	}
	*/
/*
    RegAlloc {
    .field public field1.i32;
    .construct RegAlloc().V {
        invokespecial(this, "<init>").V;
    }
    .method public soManyRegisters(arg.i32).i32 {
       a.i32 :=.i32 0.i32;
       tmp0.bool :=.bool 2.i32 <.bool 6.i32;
    if (tmp0.bool) goto then0;
    b.i32 :=.i32 1.i32;
    goto endif0;
    then0:
    b.i32 :=.i32 0.i32;
    endif0:
       c.i32 :=.i32 0.i32;
       tmp1.i32 :=.i32 getfield(this, field1.i32).i32;
    a.i32 :=.i32 tmp1.i32;
       tmp2.i32 :=.i32 a.i32 +.i32 2.i32;
    b.i32 :=.i32 tmp2.i32;
       c.i32 :=.i32 1.i32;
       tmp3.i32 :=.i32 a.i32 +.i32 b.i32;
    tmp4.i32 :=.i32 tmp3.i32 +.i32 c.i32;
    ret.i32 tmp4.i32;
    }
    }
    */
}